services:

    db:
        image: postgres:15
        restart: always
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        volumes:
            - pgdata:/var/lib/postgresql/data
        ports:
            - "5432:5432"

    migrate:
        build:
            context: ../ # StreamTrack/API/
            dockerfile: Docker/Dockerfile.migrate
        depends_on:
            - db
        environment:
            - ASPNETCORE_ENVIRONMENT=Production
            - DOTNET_RUNNING_IN_CONTAINER=true
            - AWS_REGION=us-west-1

    api:
        build:
            context: ../ # StreamTrack/API/
            dockerfile: Docker/Dockerfile
        depends_on:
            - db
        environment:
            - ASPNETCORE_ENVIRONMENT=Production
            - DOTNET_RUNNING_IN_CONTAINER=true
            - AWS_REGION=us-west-1
            - ASPNETCORE_URLS=http://+:5000
        ports:
            - "5000:5000"

    caddy:
        image: caddy:latest
        restart: always
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./Caddyfile:/etc/caddy/Caddyfile
            - caddy_data:/data
            - caddy_config:/config
        depends_on:
            - api

volumes:
    pgdata:
    caddy_data:
    caddy_config: